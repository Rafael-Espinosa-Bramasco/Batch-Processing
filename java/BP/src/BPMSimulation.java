
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import libs.Batch;
import libs.Process;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author rafael
 */
public class BPMSimulation extends javax.swing.JFrame {

    /**
     * Creates new form BPMSimulation
     */
    
    public BPMSimulation(){
        initComponents();
        this.model = (DefaultTableModel) this.BETable.getModel();
        this.model2 = (DefaultTableModel) this.RPTable.getModel();
        this.isPaused = false;
        this.MPThread = null;
        this.ACTPRO = null;
        this.ACTBAT = null;
    }
    
    // Variables
    BPMThread MPThread;
    BPM MainBPM;
    
    int pendingBatchsCount;
    int GC;
    DefaultTableModel model;
    DefaultTableModel model2;
    Batch ACTBAT;
    Process ACTPRO;
    
    boolean isPaused;

    /**
     * This method is called from within the constructohr to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PBNumber = new javax.swing.JLabel();
        BIDNumber = new javax.swing.JLabel();
        PIDNumber = new javax.swing.JLabel();
        Table = new javax.swing.JScrollPane();
        BETable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        BMETNumber = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PName = new javax.swing.JLabel();
        Operation = new javax.swing.JLabel();
        PMET = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TElapsed = new javax.swing.JLabel();
        TLeft = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        GCounter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RPTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        STATUS = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Batch Processing Simulation");
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Pending Batch's:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Batch on Execution:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Process on Execution:");

        jLabel4.setText("Finished Processes");

        PBNumber.setText("0");

        BIDNumber.setText("XBID");

        PIDNumber.setText("PXID");

        BETable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Batch ID" ,"Program ID", "Operation","Result"
            }
        ));
        BETable.setFocusable(false);
        BETable.setShowGrid(true);
        Table.setViewportView(BETable);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("MET:");

        BMETNumber.setText("0 Seconds");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Programmer Name:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Operation:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("MET:");

        PName.setText("Name");

        Operation.setText("Operation");

        PMET.setText("0 Seconds");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Time Elapsed:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Time Left:");

        TElapsed.setText("0 Seconds");

        TLeft.setText("0 Seconds");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Global Counter:");

        GCounter.setText("0 Seconds");

        RPTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Program ID", "MET (Seconds)", "Time Elapsed (Seconds)"
            }
        ));
        RPTable.setFocusable(false);
        RPTable.setShowGrid(true);
        jScrollPane1.setViewportView(RPTable);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Prending Processes of the Batch:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Status:");

        STATUS.setText("NONE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(39, 39, 39)
                                .addComponent(STATUS)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PBNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(173, 173, 173))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BIDNumber)
                                    .addComponent(BMETNumber)
                                    .addComponent(PIDNumber)
                                    .addComponent(PName)
                                    .addComponent(Operation)
                                    .addComponent(PMET)
                                    .addComponent(GCounter))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Table, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                        .addGap(476, 476, 476))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(TLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(31, 31, 31)
                                .addComponent(TElapsed, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(PBNumber)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(GCounter))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(BIDNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(BMETNumber))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(PIDNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(PName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(Operation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(PMET))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TElapsed)
                            .addComponent(jLabel10)))
                    .addComponent(Table, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(TLeft))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(STATUS)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void setBPM(BPM myMainBPM){
        this.MainBPM = myMainBPM;
    }
    
    public void setAP(Process x){
        this.ACTPRO = x;
    }
    
    public void setAB(Batch y){
        this.ACTBAT = y;
    }
    
    public void setSTATUS(String x){
        this.STATUS.setText(x);
    }
    
    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:
        if(this.MPThread != null){
            switch (evt.getKeyChar()) {
                case 'i', 'I' -> {
                    // Interruption
                    System.out.println("Interruption");
                    this.MPThread.setInt(true);
                }
                case 'e', 'E' -> {
                    // Error
                    System.out.println("Error");
                    this.MPThread.setERR(true);
                    this.model.addRow(new Object[]{this.ACTBAT.getBatchID(), this.ACTPRO.getProgramID(), this.ACTPRO.getNumber1().concat(" ").concat(this.ACTPRO.getOperation()).concat(" ").concat(this.ACTPRO.getNumber2()), "<ERROR>"});
                }
                case 'p', 'P' -> {
                    // Pause
                    this.STATUS.setText("PAUSED");
                    if(!this.isPaused){
                        System.out.println("Pause");
                        try {
                            this.MainBPM.pauseThread();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(BPMSimulation.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        this.isPaused = true;
                    }
                }
                case 'c', 'C' -> {
                    // Continue
                    this.STATUS.setText("ON PROCESS");
                    System.out.println("Continue");
                    if(this.isPaused){
                        this.MainBPM.continueThread();
                        this.isPaused = false;
                    }
                }
                default -> {
                    // No meaning key
                    System.out.println("No meaning key");
                }
            }
        }else{
            // It is not PBN Mode
            System.out.println("CONSUME!!!");
            evt.consume();
        }
    }//GEN-LAST:event_formKeyTyped

    // Funcs
    
    public void setThread(BPMThread myThread){
        this.MPThread = myThread;
    }
    
    public void addEndedProcess(String BID, String PID, String OP, String RES){
        this.model.addRow(new Object[]{BID, PID, OP, RES});
    }
    
    public void addBatchProcess(String PID, int MET, int TL){
        this.model2.addRow(new Object[]{PID, MET, TL});
    }
    
    public void setBIDNumber(String x){
        this.BIDNumber.setText(x);
    }
    public void setBMETNumber(String x){
        this.BMETNumber.setText(x);
    }
    public void setPIDNumber(String x){
        this.PIDNumber.setText(x);
    }
    public void setPName(String x){
        this.PName.setText(x);
    }
    public void setOperation(String x){
        this.Operation.setText(x);
    }
    public void setPMET(String x){
        this.PMET.setText(x);
    }
    public void setTElapsed(String x){
        this.TElapsed.setText(x);
    }
    public void setTLeft(String x){
        this.TLeft.setText(x);
    }
    public void setGCounter(String x){
        this.GCounter.setText(x);
    }
    
    public void updatePB(){
        this.PBNumber.setText(String.valueOf(this.pendingBatchsCount));
    }
    
    public int getBMET(Batch B){
        int sum = 0;
        for(int i = 0; i < B.getNumberOfProcesses() ; i++){
            sum += B.GET(i).getMETime();
        }
        return sum;
    }
    
    public void updateGC(){
        this.GCounter.setText(String.valueOf(this.GC).concat(" Seconds"));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BPMSimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BPMSimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BPMSimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BPMSimulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BPMSimulation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BETable;
    private javax.swing.JLabel BIDNumber;
    private javax.swing.JLabel BMETNumber;
    private javax.swing.JLabel GCounter;
    private javax.swing.JLabel Operation;
    private javax.swing.JLabel PBNumber;
    private javax.swing.JLabel PIDNumber;
    private javax.swing.JLabel PMET;
    private javax.swing.JLabel PName;
    private javax.swing.JTable RPTable;
    private javax.swing.JLabel STATUS;
    private javax.swing.JLabel TElapsed;
    private javax.swing.JLabel TLeft;
    private javax.swing.JScrollPane Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}