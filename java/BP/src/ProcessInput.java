
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import libs.FS_Process;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rafael & Andrea
 */
public class ProcessInput extends javax.swing.JFrame {

    /**
     * Creates new form ProcessInput
     */
    public ProcessInput() {
        initComponents();
    }
    
    //Variables
    ArrayList<FS_Process> Processes = new ArrayList();
    //Screens variables
    FStates fs = new FStates();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        NumberOfProcesses = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Put the number of processes");
        setResizable(false);

        jLabel1.setText("Number of Processes:");

        jButton1.setText("Start Simulation");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumberOfProcesses)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberOfProcesses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateNP(){
        try{
            //Validate that the field is not clear
            if(this.NumberOfProcesses.getText().compareTo("") == 0)
            {
                JOptionPane.showMessageDialog(null, "You must fill the field");
                return false;
            }
            //Validate that the number is up 0
            else if(Integer.parseInt(this.NumberOfProcesses.getText())<1)
            {
                JOptionPane.showMessageDialog(null, "The number of process need to be more than 0");
                return false;
            }
        //Validate that the user do not enter a no number character
        }catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(null, "The value must be an integer value");
                return false;
        }

        return true;
    }
    
    private void randomizeProcesses(){
        
        // Programmer name isnt necessary
        int OP1;
        int OP2;
        char OP = ' ';
        int MET;
        String PID;
        int PIDCount = 0;
        
        int numberOfProcesses = Integer.parseInt(this.NumberOfProcesses.getText());
        
        FS_Process newProcess;
        
        while(numberOfProcesses > 0){
            OP1 = (int) (Math.random() * 100);
            
            switch((int) (Math.random() *12+1)){
                case 1, 2 -> {OP = '+';}
                case 3, 4 -> {OP = '-';}
                case 5, 6 -> {OP = 'x';}
                case 7, 8 -> {OP = '/';}
                case 9, 10 -> {OP = '%';}
                case 11, 12 -> {OP = 'P';}
            }
            
            MET = (int) (7 + Math.random() * (18 - 7));
            
            if(OP == '/' || OP == '%'){
                OP2 = (int) (Math.random() *100+1);
            }else{
                OP2 = (int) (Math.random() *100+0);
            }

            PID = "P".concat(String.valueOf(PIDCount)).concat("ID");
            PIDCount++;
            
            newProcess = new FS_Process(PID,MET,String.valueOf(OP1),OP,String.valueOf(OP2));
            this.Processes.add(newProcess);
            
            numberOfProcesses--;
        }
    }
    
    //Action Events:
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(validateNP()){
            if(this.fs.isShowing()){
                // Cannot open another instance for this window
                JOptionPane.showMessageDialog(null, "Five States Mode window is already active!");
            }else {
                this.randomizeProcesses();//nota para rafa despues la borras: en este punto los procesos estan guardados
                                          //en un array llamado Processes pero ya no supe como enviar el array a la otra
                                          //pantalla
                this.fs.setVisible(true);
                
                FSThread controllerThread = new FSThread(this.fs,this.Processes);
                controllerThread.start();
                
                this.fs.setMasterThread(controllerThread);
                
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProcessInput().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NumberOfProcesses;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
